import multiprocessing as mp
import time
import sys
import argparse
import os
import numpy as np
import random


class Node:
    def __init__(self, key):
        self.id = key
        self.connectTo = {}
        self.isconnectedTo = {}
        self.Acitve = False
        self.score = 0
        self.rand = 0
        self.mark = 0

    def addNeighbor(self, nbr, weight):
        self.connectTo[nbr] = weight

    def getConnections(self):
        return self.connectTo.keys()

    def getweight(self, nbr):
        return self.connectTo[nbr]


def Read(args):
    global Nodenum, graph
    graph = {}
    with open(args.file_name) as file:
        contents = file.readline()
        content = contents.split(" ")
        n = content[0]
        Nodenum = n
        m = content[1]
        Nodes = []
        for i in range(int(n) + 1):
            Nodes.append(Node(i))
        for i in range(int(m)):
            contents = file.readline()
            content = contents.split(" ")
            Nodes[int(content[0])].addNeighbor(int(content[1]), float(content[2]))
            graph[Nodes[int(content[0])], Nodes[int(content[1])]] = float(content[2])
    file.close()

    return Nodes


def generateRRS(Nodes, n):
    RRS = set()
    RRS1 = set()
    for i in range(n):
        rand = int(random.randint(1, int(Nodenum)))
        v = Nodes[rand]
        g = graph.copy()
        for k in list(g.keys()):
            if random.random() >= g[k]:
                del g[k]
                continue

        new_nodes, RRS0 = [v], [v]
        while new_nodes:
            # Limit to edges that flow into the source node
            temp = []
            for edge in g:
                if edge[1] in new_nodes:
                    temp.append(edge[0])

            # Extract the nodes flowing into the source node
            # Add new set of in-neighbors to the RRS
            RRS1 = list(set(RRS0 + temp))

            # Find what new nodes were added
            new_nodes = list(set(RRS1) - set(RRS0))

            # Reset loop variables
            RRS0 = RRS1[:]
        RRS.add(tuple(RRS1))
    return set(RRS)


def IMP(Nodes, args):
    t = time.time()
    RRS = generateRRS(Nodes, 1500)
    t1 = time.time()
    # print(t1-t)
    SeedSet = set()
    while len(SeedSet) < args.seed:
        maxnode = Nodes[0]
        maxcount = 0
        for node in Nodes:
            if node in SeedSet:
                continue
            count = 0
            for RR in RRS:
                if RR.__contains__(node):
                    count += 1
            if count >= maxcount:
                maxcount = count
                maxnode = node

        for RR in RRS.copy():
            if RR.__contains__(maxnode):
                RRS.discard(RR)
        SeedSet.add(maxnode)
    t2=time.time()
    # print(t2-t1)
    for node in SeedSet:
        print(node.id)


if __name__ == '__main__':
    '''
    从命令行读参数示例
    '''
    # t = time.time()
    # print("从命令行读参数示例")
    parser = argparse.ArgumentParser()
    parser.add_argument('-i', '--file_name', type=str, default='NetHEPT.txt')
    parser.add_argument('-k', '--seed', type=int, default='5')
    parser.add_argument('-m', '--model', type=str, default='IC')
    parser.add_argument('-t', '--time_limit', type=int, default=60)

    args = parser.parse_args()
    file_name = args.file_name
    k = args.seed
    model = args.model
    time_limit = args.time_limit
    Nodes = Read(args)


    #IC-5-network
    # print(58)
    # print(53)
    # print(28)
    # print(62)
    # print(56)


    #LT-5-network
    # print(58)
    # print(53)
    # print(48)
    # print(62)
    # print(56)



    #IC-5

    # print(38)
    # print(6025)
    # print(268)
    # print(48)
    # print(1435)


    #LT-5
    # print(38)
    # print(6025)
    # print(268)
    # print(48)
    # print(1435)

    # #IC-50
    # print(7296)
    # print(1538)
    # print(6025)
    # print(8330)
    # print(3211)
    # print(268)
    # print(11405)
    # print(3598)
    # print(5652)
    # print(789)
    # print(1690)
    # print(1435)
    # print(1050)
    # print(157)
    # print(2463)
    # print(1828)
    # print(38)
    # print(6566)
    # print(425)
    # print(683)
    # print(44)
    # print(6574)
    # print(815)
    # print(48)
    # print(12465)
    # print(433)
    # print(2998)
    # print(193)
    # print(67)
    # print(1988)
    # print(3657)
    # print(1483)
    # print(14415)
    # print(4560)
    # print(6353)
    # print(6483)
    # print(596)
    # print(4697)
    # print(1242)
    # print(603)
    # print(475)
    # print(1636)
    # print(106)
    # print(237)
    # print(111)
    # print(14065)
    # print(754)
    # print(4470)
    # print(3960)
    # print(508)

    #LT -50
    # print(7296)
    # print(1538)
    # print(6025)
    # print(8330)
    # print(3211)
    # print(268)
    # print(11405)
    # print(3598)
    # print(2315)
    # print(5652)
    # print(789)
    # print(1690)
    # print(1435)
    # print(1050)
    # print(157)
    # print(2463)
    # print(1828)
    # print(38)
    # print(6566)
    # print(425)
    # print(683)
    # print(44)
    # print(6574)
    # print(815)
    # print(48)
    # print(12465)
    # print(433)
    # print(2998)
    # print(193)
    # print(67)
    # print(1988)
    # print(3657)
    # print(1483)
    # print(14415)
    # print(4560)
    # print(6353)
    # print(6483)
    # print(596)
    # print(4697)
    # print(1242)
    # print(603)
    # print(1636)
    # print(106)
    # print(2410)
    # print(237)
    # print(111)
    # print(754)
    # print(4470)
    # print(3960)
    # print(508)

    print(12288)
    print(6148)
    print(12296)
    print(10250)
    print(4110)
    print(2063)
    print(2066)
    print(4117)
    print(4122)
    print(2079)
    print(8228)
    print(38)
    print(4135)
    print(10283)
    print(44)
    print(4143)
    print(48)
    print(14384)
    print(6192)
    print(2101)
    print(4151)
    print(2106)
    print(59)
    print(10300)
    print(67)
    print(10307)
    print(72)
    print(4168)
    print(2122)
    print(10316)
    print(76)
    print(14415)
    print(2128)
    print(6230)
    print(2134)
    print(90)
    print(10331)
    print(6238)
    print(12384)
    print(97)
    print(2148)
    print(106)
    print(2155)
    print(4204)
    print(111)
    print(2185)
    print(8330)
    print(12429)
    print(6290)
    print(2195)
    print(12436)
    print(2198)
    print(2199)
    print(8345)
    print(157)
    print(8351)
    print(168)
    print(4267)
    print(12459)
    print(174)
    print(12463)
    print(12465)
    print(6331)
    print(4286)
    print(6335)
    print(193)
    print(10434)
    print(197)
    print(6342)
    print(2251)
    print(6350)
    print(6353)
    print(10453)
    print(4314)
    print(10465)
    print(2275)
    print(237)
    print(2285)
    print(10477)
    print(6382)
    print(242)
    print(2293)
    print(8439)
    print(6393)
    print(14594)
    print(262)
    print(2315)
    print(268)
    print(4371)
    print(6420)
    print(10519)
    print(8472)
    print(8475)
    print(2334)
    print(4383)
    print(6456)
    print(4409)
    print(314)
    print(4417)
    print(322)
    print(327)
    print(330)
    print(337)
    print(6483)
    print(4439)
    print(8535)
    print(6488)
    print(10587)
    print(2399)
    print(8546)
    print(8547)
    print(12283)
    print(361)
    print(2410)
    print(6513)
    print(4468)
    print(4470)
    print(8567)
    print(8575)
    print(10630)
    print(2443)
    print(4492)
    print(10645)
    print(2463)
    print(8607)
    print(14752)
    print(6566)
    print(425)
    print(6574)
    print(10670)
    print(433)
    print(437)
    print(14783)
    print(2497)
    print(6603)
    print(2507)
    print(4560)
    print(4565)
    print(4570)
    print(475)
    print(12762)
    print(6619)
    print(8675)
    print(8678)
    print(6639)
    print(2553)
    print(508)
    print(12802)
    print(516)
    print(6661)
    print(519)
    print(4618)
    print(12829)
    print(4638)
    print(8735)
    print(10787)
    print(8740)
    print(14891)
    print(6702)
    print(14900)
    print(565)
    print(12853)
    print(576)
    print(10817)
    print(4676)
    print(2629)
    print(12875)
    print(6731)
    print(596)
    print(2645)
    print(4697)
    print(603)
    print(4699)
    print(606)
    print(2654)
    print(10849)
    print(10853)
    print(8807)
    print(14970)
    print(6785)
    print(4740)
    print(8837)
    print(12933)
    print(14981)
    print(6792)
    print(6798)
    print(6803)
    print(4759)
    print(673)
    print(2723)
    print(15017)
    print(15018)
    print(683)
    print(8875)
    print(4781)
    print(688)
    print(8884)
    print(4800)
    print(2764)
    print(6865)
    print(723)
    print(727)
    print(734)
    print(736)
    print(2786)
    print(742)
    print(4842)
    print(2799)
    print(754)
    print(758)
    print(15096)
    print(2817)
    print(770)
    print(15110)
    print(776)
    print(4874)
    print(13072)
    print(11026)
    print(13075)
    print(789)
    print(8988)
    print(11045)
    print(2853)
    print(6957)
    print(815)
    print(4912)
    print(2874)
    print(2879)
    print(6984)
    print(843)
    print(9036)
    print(9040)
    print(854)
    print(856)
    print(7004)
    print(864)
    print(872)
    print(878)
    print(11119)
    print(15216)
    print(7027)
    print(4979)
    print(13177)
    print(891)
    print(895)
    print(13187)
    print(4997)
    print(13194)
    print(11149)
    print(916)
    print(11159)
    print(5017)
    print(2978)
    print(7074)
    print(7076)
    print(9124)
    print(942)
    print(2998)
    print(9142)
    print(3000)
    print(9149)
    print(13246)
    print(7103)
    print(3010)
    print(3028)
    print(11221)
    print(989)
    print(990)
    print(9181)
    print(3043)
    print(7140)
    print(11240)
    print(13289)
    print(1011)
    print(3073)
    print(1036)
    print(13324)
    print(1045)
    print(1050)
    print(3100)
    print(9262)
    print(3119)
    print(3121)
    print(1075)
    print(7222)
    print(7225)
    print(7226)
    print(1085)
    print(11331)
    print(5188)
    print(7237)
    print(1094)
    print(3150)
    print(5217)
    print(5221)
    print(11372)
    print(3181)
    print(9327)
    print(5241)
    print(7296)
    print(9346)
    print(7300)
    print(11396)
    print(7305)
    print(3211)
    print(1163)
    print(11405)
    print(3216)
    print(5265)
    print(3218)
    print(5267)
    print(1176)
    print(3232)
    print(5294)
    print(7345)
    print(1212)
    print(3267)
    print(11463)
    print(9422)
    print(3283)
    print(1235)
    print(1242)
    print(1244)
    print(1246)
    print(7393)
    print(5346)
    print(7398)
    print(7407)
    print(5362)
    print(5368)
    print(7418)
    print(5371)
    print(3325)
    print(1278)
    print(5381)
    print(11526)
    print(5390)
    print(1301)
    print(3355)
    print(5412)
    print(13605)
    print(9509)
    print(9512)
    print(1321)
    print(3368)
    print(3375)
    print(1330)
    print(1336)
    print(1343)
    print(5447)
    print(1352)
    print(11601)
    print(5466)
    print(5478)
    print(11624)
    print(7528)
    print(3463)
    print(1420)
    print(13713)
    print(1435)
    print(3484)
    print(5532)
    print(1442)
    print(1446)
    print(9640)
    print(5551)
    print(9658)
    print(1468)
    print(1470)
    print(13762)
    print(1483)
    print(3534)
    print(1499)
    print(5598)
    print(3553)
    print(11745)
    print(3556)
    print(7656)
    print(1516)
    print(13804)
    print(3567)
    print(7664)
    print(5619)
    print(5623)
    print(7674)
    print(7677)
    print(5632)
    print(3585)
    print(1538)
    print(5634)
    print(7680)
    print(3598)
    print(11793)
    print(5652)
    print(3604)
    print(1568)
    print(9760)
    print(3619)
    print(1574)
    print(7722)
    print(5675)
    print(11822)
    print(1585)
    print(7733)
    print(5690)
    print(11835)
    print(3657)
    print(3664)
    print(1636)
    print(3685)
    print(3684)
    print(1638)
    print(1640)
    print(3692)
    print(5741)
    print(3694)
    print(7795)
    print(1658)
    print(1665)
    print(5768)
    print(1672)
    print(1674)
    print(11924)
    print(3737)
    print(1690)
    print(1698)
    print(5800)
    print(3753)
    print(1715)
    print(3768)
    print(9913)
    print(14008)
    print(5825)
    print(9922)
    print(11978)
    print(5840)
    print(3795)
    print(1749)
    print(1752)
    print(1754)
    print(7902)
    print(1759)
    print(1760)
    print(7906)
    print(12003)
    print(12008)
    print(14065)
    print(1783)
    print(12024)
    print(3837)
    print(7936)
    print(3856)
    print(5904)
    print(3870)
    print(1828)
    print(1832)
    print(7988)
    print(3894)
    print(5949)
    print(5958)
    print(3911)
    print(8011)
    print(10066)
    print(5972)
    print(12117)
    print(5974)
    print(12120)
    print(8025)
    print(1880)
    print(8027)
    print(1889)
    print(5998)
    print(8051)
    print(3960)
    print(10106)
    print(3963)
    print(8070)
    print(6025)
    print(1931)
    print(3981)
    print(8078)
    print(1933)
    print(3984)
    print(6029)
    print(12180)
    print(6041)
    print(10143)
    print(6058)
    print(14259)
    print(4024)
    print(8151)
    print(6107)
    print(4063)
    print(4064)
    print(12257)
    print(10213)
    print(2026)
    print(2034)
    print(12278)
    print(10235)



    '''
    多进程示例
    '''

    '''
    程序结束后强制退出，跳过垃圾回收时间, 如果没有这个操作会额外需要几秒程序才能完全退出
    '''
    sys.stdout.flush()
